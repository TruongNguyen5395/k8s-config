---
- hosts: nfs
  become: yes
  roles:
    - role: geerlingguy.nfs
      nfs_exports: ["/home/public *(rw,sync,no_root_squash)"]
  tags:
    - "nfs"

- name: Build a cluster with a single control node
  hosts: k3s_cluster
  become: yes
  strategy: linear
  vars:
    iface: "{{ hostvars[inventory_hostname]['flannel-iface']}}"
    k3s_become_for_all: true
    k3s_build_cluster: true
    k3s_use_experimental: true
    k3s_control_node_address: 45.77.19.225

    k3s_server:
      write-kubeconfig-mode: 644
      flannel-backend: "vxlan"
      flannel-iface: "{{ iface }}"
      advertise-address: "{{ vars['ansible_'~iface].ipv4.address }}"
      datastore-endpoint: http://45.77.19.225:2379
      # datastore-endpoint: postgres://postgres:2vTv2rNxQteHjMjQY6iAxxl2MgCEu4hm@172.105.230.91:5432/k3s_db5?sslmode=disable
      disable:
        - traefik
        - local-storage
    k3s_agent:
      node-ip: "{{ vars['ansible_'~iface].ipv4.address }}"
      node-external-ip: "{{ vars['ansible_'~iface].ipv4.address }}"
      flannel-iface: "{{ iface }}"

  roles:
    - role: xanmanning.k3s
  tags:
    - "k3s"
- hosts: k3s_cluster
  become: yes
  tags:
    - "k3s-config"
  tasks:
    - name: install nfs client
      action: apt pkg=nfs-common state=present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: install nfs client
      action: yum pkg=nfs-utils state=present
      when: ansible_distribution == 'Centos'

    - name: Retrieve helm binary archive.
      unarchive:
        src: https://get.helm.sh/helm-v3.2.1-linux-amd64.tar.gz
        dest: /tmp
        creates: /usr/local/bin/helm
        remote_src: yes

    - name: Move helm binary into place
      command: cp /tmp/linux-amd64/helm /usr/local/bin/helm
      args:
        creates: /usr/local/bin/helm

    - name: line insert
      lineinfile:
        path: .zshrc
        line: "export KUBECONFIG=/etc/rancher/k3s/k3s.yaml"
        insertbefore: BOF

- hosts: kube-0
  become: yes
  tags:
    - "k3s-config"
    - "k3s-master-config"
  tasks:
    - name: copy nfs storage class
      copy:
        dest: "/var/lib/rancher/k3s/server/manifests/nfs.yml"
        src: "../nfs.yml"

    - name: replace nfs ip
      ansible.builtin.replace:
        path: /var/lib/rancher/k3s/server/manifests/nfs.yml
        regexp: "x.x.x.x"
        replace: "{{  hostvars[groups['nfs_server'][0]]['ansible_host'] }}"

    - name: Add a repository
      community.kubernetes.helm_repository:
        name: stable
        repo_url: https://charts.helm.sh/stable

    - name: Add a repository
      community.kubernetes.helm_repository:
        name: incubator
        repo_url: https://charts.helm.sh/incubator

    - name: patch nfs to default
      retries: 10
      delay: 3
      tags:
        - path-nfs
      command: |
        kubectl patch storageclass nfs -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
